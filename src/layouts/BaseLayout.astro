---
import "open-props/easings";
import "./tailwind.css";
import Nav from "~/components/Nav.astro";
import type { MarkdownHeading, ImageMetadata } from "astro";
import { getImage } from "astro:assets";
import { ViewTransitions } from "astro:transitions";
import Font from "~/components/Font.astro";

type Props = {
  title?: string;
  description?: string;
  image?: ImageMetadata;
  headings?: MarkdownHeading[];
};
const {
  title = "Ben Holmes",
  description = "The whiteboard guy at Astro that codes kinda well.",
  headings,
  image = await getImage({ src: import("~/assets/bholmesdev.png") }),
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content="Ben Holmes" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@bholmesdev" />
    <meta name="twitter:creator" content="@bholmesdev" />
    <meta name="description" content={description} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:image" content={image.src} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Ben Holmes" />
    <meta property="og:title" />
    <meta property="og:description" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <ViewTransitions fallback="none" />
    <Font />
    {
      import.meta.env.PROD && (
        <script
          defer
          data-domain="bholmes.dev"
          src="https://plausible.io/js/script.outbound-links.js"
        />
      )
    }

    <slot name="head" />
    <title>{title}</title>
  </head>
  <body class="bg-gray-950 text-white text-base">
    <my-shroud
      class="fixed inset-0 invisible bg-gray-950 opacity-0 z-30 data-[visible]:opacity-80 data-[visible]:visible transition-all"
    ></my-shroud>
    <Nav headings={headings} />
    <div class="min-h-[80dvh]">
      <slot />
    </div>
    <footer>
      <p class="text-center py-8 text-sm">
        &copy; 2020-present Ben Holmes. All rights reserved.
      </p>
    </footer>
    <style is:global>
      h1 {
        font-family: var(--font-family-heading);
      }

      button {
        cursor: pointer;
      }

      article a {
        color: var(--color-primary-light);
        transition: filter 0.15s;
      }
      article a:is(:hover, :focus) {
        filter: brightness(1.25);
      }
    </style>
    <script>
      import { effect } from "~/lib/effect";
      import { isDrawing } from "~/stores";
      import { controller, attr } from "@github/catalyst";
      import { Signal } from "signal-polyfill";

      @controller
      class MyShroudElement extends HTMLElement {
        @attr visible = false;

        #disconnect = new AbortController();

        connectedCallback() {
          const smBreakpointMatches = new Signal.State(
            window.matchMedia("(min-width: 640px)").matches
          );
          window.matchMedia("(min-width: 640px)").onchange = ({ matches }) => {
            smBreakpointMatches.set(matches);
          };

          effect(() => {
            this.visible = isDrawing.get() && !smBreakpointMatches.get();
          }, this.#disconnect);
        }

        disconnectedCallback() {
          this.#disconnect.abort();
        }
      }
    </script>
  </body>
</html>
