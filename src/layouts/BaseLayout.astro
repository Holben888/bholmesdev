---
import "./tailwind.css";
import "open-props/easings";
import Nav from "../components/Nav.astro";
import type { MarkdownHeading } from "astro";
import Fonts from "../components/Fonts.astro";
import { ViewTransitions } from "astro:transitions";

type Props = {
  title?: string;
  headings?: MarkdownHeading[];
};
const { title = "Ben Holmes", headings } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <slot name="head" />
    <title>{title}</title>
    <ViewTransitions />
    <Fonts />
  </head>
  <body class="bg-gray-950 text-white text-base px-4 md:px-8">
    <my-shroud
      class="fixed inset-0 invisible bg-gray-950 opacity-0 z-30 data-[visible]:opacity-80 data-[visible]:visible transition-all"
    ></my-shroud>
    <Nav headings={headings} />
    <div>
      <slot />
    </div>
    <style is:global>
      :root {
        --purple-hs: 263.1 100%;
        --purple: hsl(var(--purple-hs) 50%);
        --purple-light: hsl(var(--purple-hs) 80%);
      }

      @media (prefers-color-scheme: dark) {
        :root {
          --purple: hsl(var(--purple-hs) 57%);
        }
      }

      h1 {
        font-family: var(--font-family-heading);
      }

      button {
        cursor: pointer;
      }
    </style>
    <script>
      import { effect } from "@preact/signals";
      import { isDrawing } from "../stores";
      import { controller, attr } from "@github/catalyst";

      @controller
      class MyShroudElement extends HTMLElement {
        @attr visible = false;

        connectedCallback() {
          isDrawing.subscribe((value) => {
            const mdBreakpoint = window.matchMedia("(max-width: 768px)");
            if (mdBreakpoint.matches) {
              this.visible = value;
            }
          });
        }
      }
    </script>
  </body>
</html>
