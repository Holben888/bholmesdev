---
import iBen from "./iBen.svg?raw";
import Button from "./Button.astro";
import CdDrive from "./CdDrive.astro";
import ChevronDown from "./ChevronDown.astro";

const videoIds = ["MaebEqhZR84", "ZCdvjNTcT1I", "GOihOAcIgMw", "oxAIcGqFiT8"];
---

<div
  data-iBen
  x-data=`iBen(${JSON.stringify(videoIds)})`
  class="dark:bg-gray-900 sm:px-6 px-2"
>
  <div data-container class="py-8 max-w-prose mx-auto grid relative">
    <img
      data-glow
      :src="getImgSrc"
      alt=""
      class="pt-[0%] w-full"
      aria-hidden="true"
    />
    <div class="w-[89%] mt-[8.5%] mx-[5.5%] bg-slate-950 relative">
      <img
        x-show="!playing"
        data-thumbnail
        :class="welcome && 'welcome'"
        :src="getImgSrc"
        alt="A gud video"
        class="w-full aspect-[3/2] leading-none object-cover"
      />
      <div
        data-scan-line-overlay
        class="absolute pointer-events-none inset-0 aspect-[3/2] flex flex-col justify-between"
      >
        <div data-scan-line class="w-full h-1 bg-slate-200 opacity-30"></div>
        <div
          x-show="!playing"
          data-btn-labels
          :class="welcome && 'welcome'"
          class="px-[7%] pb-[2%] pt-[10%] flex justify-between font-bold bg-gradient-to-t from-slate-950 to-transparent"
        >
          <span class="w-[6ch] flex flex-col items-center"
            >Play <ChevronDown /></span
          >
          <span class="w-[6ch] flex flex-col items-center"
            >Random <ChevronDown /></span
          >
        </div>
      </div>
      <template x-if="playing">
        <iframe
          class="w-full aspect-[3/2] h-auto"
          width="560"
          height="315"
          :src="getEmbedSrc"
          title="YouTube video player"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen></iframe>
      </template>
    </div>
    <div
      data-computer
      class="z-10 m-auto w-full pointer-events-none"
      set:html={iBen}
    />
    <div
      data-btn-overlay
      class="absolute left-0 right-0 z-20 flex justify-between items-end px-[5%] h-[13%]"
    >
      <Button
        @click="playing = !playing; welcome = false"
        icon="play"
        aria-label="Play video"
      />

      <CdDrive />
      <Button
        @click="incrementIdx(); playing = false"
        icon="random"
        aria-label="Get random video"
      />
    </div>
  </div>
</div>

<script>
  import Alpine from "alpinejs";

  Alpine.data("iBen", (initialVideos) => {
    const [showcaseVideo, ...otherVideos] = initialVideos as string[];
    const videoIds = [showcaseVideo, ...fisherYatesShuffle(otherVideos)];

    return {
      playing: false,
      welcome: true,
      videoIds,
      videoIdx: 0,
      incrementIdx() {
        this.videoIdx = (this.videoIdx + 1) % this.videoIds.length;
      },
      getImgSrc() {
        return `https://img.youtube.com/vi/${
          this.videoIds[this.videoIdx]
        }/hqdefault.jpg`;
      },
      getEmbedSrc() {
        return `https://www.youtube-nocookie.com/embed/${
          this.videoIds[this.videoIdx]
        }?autoplay=1`;
      },
    };
  });

  /**
   * Pseudo-random algorithm
   * @see https://www.geeksforgeeks.org/shuffle-a-given-array-using-fisher-yates-shuffle-algorithm/
   */
  function fisherYatesShuffle<T>(initialArr: T[]) {
    const arr = [...initialArr];
    for (let i = arr.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      const temp = arr[i]!;
      arr[i] = arr[j]!;
      arr[j] = temp;
    }
    return arr;
  }
</script>

<style>
  [data-iBen] {
    --anim-delay: 1.3s;
  }

  [data-scan-line] {
    animation: scan 4s linear infinite;
    animation-delay: var(--anim-delay);
  }
  [data-scan-line-overlay] {
    background-image: linear-gradient(
      180deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.08) 50%,
      rgba(0, 0, 0, 0) 100%
    );
    background-size: 100% 6px;
    background-repeat: repeat;
  }

  [data-btn-labels].welcome {
    animation: delayed-reveal 0.3s ease-in forwards;
    animation-delay: var(--anim-delay);
    opacity: 0;
  }

  @keyframes delayed-reveal {
    to {
      opacity: 1;
    }
  }

  [data-computer] :global(svg) {
    width: 100%;
    height: 100%;
  }

  [data-container] > * {
    /* Overlap all children in same grid column */
    grid-area: 1/1;
  }

  @media (min-width: theme(screens.sm)) {
    [data-glow] {
      filter: brightness(7) blur(50px) !important;
    }
  }

  [data-glow] {
    filter: brightness(7) blur(20px);
    transform: perspective(1000px) rotate3d(1, 0, 0, 4deg);
    transform-origin: bottom center;
    animation:
      glow-reveal 0.2s ease-in forwards,
      pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    animation-delay: var(--anim-delay);
    opacity: 0;
    scale: 0.8;
  }

  [data-thumbnail] {
    transform: perspective(1000px) rotate3d(1, 0, 0, 4deg);
    transform-origin: bottom center;
  }

  [data-thumbnail].welcome {
    filter: brightness(0.3);
    animation: img-reveal 0.3s ease-in forwards;
    animation-delay: var(--anim-delay);
    clip-path: ellipse(0% 0% at center);
  }

  [data-btn-overlay] {
    bottom: calc(theme(spacing.6) + 4.4%);
  }

  [data-btn-overlay] :global([data-icon="random"]) {
    transition: transform 0.7s var(--ease-spring-2);
    transform-origin: center 45%;
  }
  [data-btn-overlay] :global(:is(button:hover) [data-icon="random"]) {
    transform: rotate(730deg);
  }

  @keyframes img-reveal {
    to {
      clip-path: ellipse(100% 100% at center);
      filter: brightness(1);
    }
  }

  @keyframes pulse {
    50% {
      opacity: 0.7;
    }
  }
  @keyframes glow-reveal {
    to {
      opacity: 1;
      scale: 1;
    }
  }
  @keyframes scan {
    to {
      transform: translateY(400px);
      opacity: 0;
    }
  }
</style>
