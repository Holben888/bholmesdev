---
import type { MarkdownHeading } from "astro";
import Toc from "./TOC.astro";
import { scope } from "simple:scope";

type Props = {
  headings: MarkdownHeading[] | undefined;
};

const { headings } = Astro.props;
const id = scope("nav");
---

<nav-open>
  <nav
    class="sticky top-0 max-w-[100ch] flex gap-4 items-center text-lg py-3 px-5 transition-colors"
  >
    {headings?.length ? <Toc {headings} /> : null}
    <ul id={id} class="flex gap-4 ml-auto items-center">
      <li><a href="/">Ben</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/talks">Talks</a></li>
      <li><a href="/videos">Videos</a></li>
    </ul>
    <div class="toggle-bg">
      <button
        data-action="click:nav-open#toggle"
        data-target="nav-open.btn"
        aria-controls={id}
        class="h-[24px] w-[30px] flex flex-col justify-between relative p-0 bg-transparent before:content-[''] before:absolute before:inset-[-0.5rem] before:z-[-1] before:border-radius-[0.7rem] before:bg-[var(--bg-blur)]"
      >
        <div class="stripe stripe-top"></div>
        <div class="stripe stripe-middle"></div>
        <div class="stripe stripe-bottom"></div>
      </button>
    </div>
  </nav>
</nav-open>

<script>
  import { attr, target, controller } from "@github/catalyst";

  @controller
  export class NavOpenElement extends HTMLElement {
    @attr open = false;
    @target declare btn: HTMLButtonElement;

    toggle() {
      this.open = !this.open;
      this.btn.setAttribute("aria-expanded", this.open.toString());
    }
  }
</script>

<style lang="scss">
  .toggle {
    height: 24px;
    width: 30px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    padding: 0;
    background-color: transparent;
  }
  .toggle::before {
    content: "";
    position: absolute;
    inset: -0.5rem;
    z-index: -1;
    border-radius: 0.7rem;
    background-color: var(--bg-blur);
  }

  .stripe {
    height: 4px;
    width: inherit;
    background-color: currentColor;
    transition: transform 0.2s ease-in-out;
    border-radius: 4px;
  }
  .stripe.stripe-middle {
    transform-origin: center center;
    transition-property: transform, opacity;
  }
  .stripe.stripe-top {
    transform-origin: top right;
  }
  .stripe.stripe-bottom {
    transform-origin: bottom right;
  }
  [data-open] .stripe-top {
    transform: rotate(-45deg);
  }
  [data-open] .stripe-middle {
    opacity: 0;
    transform: scaleX(0);
  }
  [data-open] .stripe-bottom {
    transform: rotate(45deg);
  }

  @for $i from 1 through 4 {
    li:nth-child(#{$i}) {
      opacity: 0;
      visibility: hidden;
      transform: translateX(17em - ($i * 3.5em));
      transition-delay: (4 - $i) * 50ms;
      pointer-events: none;
    }
  }
  li {
    transition: all 0.2s ease-in-out;
  }
  [data-open] li {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
    pointer-events: initial;
  }

  [data-open] nav {
    @apply dark:bg-gray-950;
  }

  a {
    text-decoration: none;
  }
</style>
