---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((p) => ({ params: { slug: p.slug }, props: p }));
}

type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings } = await post.render();
---

<BaseLayout {headings}>
  <article-scroll>
    <main class="max-w-prose m-auto px-3 prose prose-invert">
      <h1>{post.data.title}</h1>
      <Content />
    </main>
  </article-scroll>
</BaseLayout>

<script>
  import "../../components/article-scroll";
  import { controller, target } from "@github/catalyst";
  import { progress } from "../../components/article-scroll";

  @controller
  class ArticleScrollElement extends HTMLElement {
    @target declare progress: HTMLProgressElement;

    #listener = () => {};
    connectedCallback() {
      this.#listener = () => {
        const articleHeight = this.offsetTop + this.offsetHeight;
        progress.set(
          Math.min((window.scrollY + window.innerHeight) / articleHeight, 1)
        );
      };
      document.addEventListener("scroll", this.#listener);
    }
    disconnectedCallback() {
      document.removeEventListener("scroll", this.#listener);
    }
  }
</script>
